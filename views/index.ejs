<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <title>論文管理</title>
    <style>
      /* 白黒を基調としたスタイリング */
      body {
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
        margin: 20px;
        background-color: #f0f0f0; /* 薄いグレー */
        color: #333; /* 濃いグレーのテキスト */
      }
      h1,
      h2 {
        color: #1a1a1a; /* ほぼ黒 */
        font-weight: 600;
        border-bottom: 1px solid #ddd;
        padding-bottom: 10px;
        margin-top: 30px;
      }
      .user-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 10px 0;
        border-bottom: 1px solid #ddd;
      }
      .user-info span {
        font-size: 1.1em;
        font-weight: 600;
        color: #555;
      }
      .user-info a {
        text-decoration: none;
        background-color: #333; /* 濃いグレー */
        color: white;
        padding: 8px 15px;
        border-radius: 5px;
        transition: background-color 0.2s ease;
      }
      .user-info a:hover {
        background-color: #555; /* ホバーで少し明るく */
      }
      form {
        background-color: #ffffff; /* 白 */
        padding: 20px;
        margin-bottom: 30px;
        border: 1px solid #eee;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.03);
      }
      form label {
        display: block;
        margin-bottom: 8px;
        color: #555;
        font-size: 0.95em;
        font-weight: 500;
      }
      form input[type="text"],
      form input[type="url"],
      form textarea,
      form select { /* select要素にもスタイルを適用 */
        width: calc(100% - 22px);
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        font-size: 0.95em;
      }
      form button {
        padding: 10px 20px;
        background-color: #333;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1em;
        font-weight: 600;
        transition: background-color 0.2s ease;
        margin-right: 10px; /* ボタン間のスペース */
      }
      form button:hover {
        background-color: #555;
      }
      form button[type="reset"] {
        background-color: #666; /* リセットボタンの色 */
      }
      form button[type="reset"]:hover {
        background-color: #888;
      }
      table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #ffffff;
        border-radius: 8px;
        overflow: hidden; /* 角丸を適用するために必要 */
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.03);
      }
      th,
      td {
        border: 1px solid #eee; /* 薄いボーダー */
        padding: 12px;
        text-align: left;
        font-size: 0.9em;
      }
      th {
        background-color: #f8f8f8; /* わずかに明るい背景 */
        color: #555;
        font-weight: 600;
      }
      tr:nth-child(even) {
        background-color: #fafafa; /* 偶数行のストライプ */
      }
      td.actions {
        white-space: nowrap; /* ボタンが改行されないように */
      }
      td.actions button,
      td.actions a {
        padding: 6px 12px;
        margin-right: 5px;
        border-radius: 4px;
        font-size: 0.85em;
        text-decoration: none;
        display: inline-block; /* ボタンとリンクを並べる */
      }
      td.actions .edit-button {
        background-color: #666; /* 編集ボタン */
        color: white;
      }
      td.actions .edit-button:hover {
        background-color: #888;
      }
      td.actions .delete-button {
        background-color: #a00; /* 削除ボタン */
        color: white;
        border: none;
        cursor: pointer;
      }
      td.actions .delete-button:hover {
        background-color: #c00;
      }
      .search-form {
        display: flex;
        flex-wrap: wrap; /* 狭い画面で折り返す */
        gap: 15px; /* 要素間のスペース */
        align-items: flex-end; /* ボタンを下揃えに */
      }
      .search-form > div {
        flex: 1; /* 均等な幅に */
        min-width: 150px; /* 最小幅を設定 */
      }
      .search-form button {
        margin-top: 5px; /* ラベルとの位置調整 */
      }
      .no-papers {
        text-align: center;
        padding: 20px;
        color: #666;
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.03);
      }

      /* ステータスセレクトボックスのスタイル */
      .status-select {
        padding: 6px 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        background-color: white;
        font-size: 0.85em;
        cursor: pointer;
        min-width: 100px;
      }
      .status-select:focus {
        outline: none;
        border-color: #666;
        box-shadow: 0 0 0 2px rgba(51, 51, 51, 0.2);
      }

      /* ステータスの色分け */
      .status-未読 { background-color: #f0f0f0; color: #666; } /* 薄いグレー、通常のテキスト */
      .status-読了 { background-color: #e6ffe6; color: #338833; } /* 薄い緑、濃い緑のテキスト */
      .status-要再読 { background-color: #fffbe6; color: #ccaa00; } /* 薄い黄、濃い黄のテキスト */
      .status-レビュー中 { background-color: #e6f7ff; color: #0066cc; } /* 薄い青、濃い青のテキスト */

      .status-select.status-未読 { border-color: #ccc; }
      .status-select.status-読了 { border-color: #b3e6b3; }
      .status-select.status-要再読 { border-color: #ffe066; }
      .status-select.status-レビュー中 { border-color: #b3d9ff; }

    </style>
  </head>
  <body>
    <div class="user-info">
      <span>こんにちは、<%= userName %>さん！</span>
      <a href="/logout">ログアウト</a>
    </div>

    <h1>論文管理</h1>


    <h2>論文検索</h2>
    <form action="/papers" method="get" class="search-form">
      <div>
        <label for="searchTitle">タイトル:</label>
        <input
          type="text"
          id="searchTitle"
          name="searchTitle"
          value="<%= searchTitle %>"
          placeholder="タイトルで検索"
        />
      </div>
      <div>
        <label for="searchAuthor">著者:</label>
        <input
          type="text"
          id="searchAuthor"
          name="searchAuthor"
          value="<%= searchAuthor %>"
          placeholder="著者名で検索"
        />
      </div>
      <div>
        <label for="searchCategory">カテゴリ:</label>
        <input
          type="text"
          id="searchCategory"
          name="searchCategory"
          value="<%= searchCategory %>"
          placeholder="カテゴリで検索"
        />
      </div>
      <div>
        <label for="searchStatus">ステータス:</label>
        <select id="searchStatus" name="searchStatus" class="status-select">
          <% statusOptions.forEach(option => { %>
            <option value="<%= option %>" <%= searchStatus === option ? 'selected' : '' %>>
              <%= option %>
            </option>
          <% }) %>
        </select>
      </div>
      <button type="submit">検索</button>
      <button type="button" onclick="location.href='/papers'">リセット</button>
    </form>


    <h2>あなたの論文一覧</h2>
    <% if (papers.length > 0) { %>
    <table>
      <thead>
        <tr>
          <th>タイトル</th>
          <th>著者名</th>
          <th>カテゴリ</th>
          <th>ウェブサイト</th>
          <th>コメント</th>
          <th>ステータス</th>
          <th>追加日時</th>
          <th>更新日時</th>
          <th>操作</th>
        </tr>
      </thead>
      <tbody>
        <% papers.forEach(paper => { %>
        <tr>
          <td><%= paper.name %></td>
          <td><%= paper.author %></td>
          <td><%= paper.category || 'N/A' %></td>
          <td>
            <% if (paper.url) { %>
            <a href="<%= paper.url %>" target="_blank" rel="noopener noreferrer"
              >リンク</a
            >
            <% } else { %> N/A <% } %>
          </td>
          <td><%= paper.comment || 'N/A' %></td>
          <td>
            <select class="status-select status-<%= paper.status %>" data-paper-id="<%= paper.id %>">
              <% statusOptions.slice(1).forEach(option => { /* 「全て」を除く */ %>
                <option value="<%= option %>" <%= paper.status === option ? 'selected' : '' %>>
                  <%= option %>
                </option>
              <% }) %>
            </select>
          </td>
          <td><%= formatToJST(paper.createdAt) %></td>
          <td><%= formatToJST(paper.updatedAt) %></td>
          <td class="actions">
            <a href="/papers/edit/<%= paper.id %>" class="edit-button">編集</a>
            <form
              action="/papers/delete/<%= paper.id %>"
              method="post"
              style="display: inline"
              onsubmit="return confirm('本当にこの論文を削除しますか？');"
            >
              <button type="submit" class="delete-button">削除</button>
            </form>
          </td>
        </tr>
        <% }) %>
      </tbody>
    </table>
    <% } else { %>
    <p class="no-papers">
      論文はまだ登録されていません、または検索条件に一致する論文が見つかりませんでした。
    </p>
    <% } %>

    <h2><%= editPaper ? '論文編集' : '論文追加' %></h2>
    <form action="<%= editPaper ? '/papers/update/' + editPaper.id : '/papers' %>" method="post">
      <label for="paperName">論文タイトル (必須):</label>
      <input
        type="text"
        id="paperName"
        name="name"
        placeholder="論文タイトルを入力"
        value="<%= editPaper ? editPaper.name : '' %>"
        required
      />

      <label for="paperAuthor">著者名 (必須):</label>
      <input
        type="text"
        id="paperAuthor"
        name="author"
        placeholder="著者名を入力"
        value="<%= editPaper ? editPaper.author : '' %>"
        required
      />

      <label for="paperCategory">カテゴリ (任意):</label>
      <input
        type="text"
        id="paperCategory"
        name="category"
        placeholder="カテゴリを入力"
        value="<%= editPaper ? editPaper.category : '' %>"
      />

      <label for="paperUrl">ウェブサイトURL (任意):</label>
      <input
        type="url"
        id="paperUrl"
        name="url"
        placeholder="論文のURLを入力"
        value="<%= editPaper ? editPaper.url : '' %>"
      />

      <label for="paperComment">コメント (任意):</label>
      <textarea
        id="paperComment"
        name="comment"
        placeholder="コメントを入力"
        rows="4"
      ><%= editPaper ? editPaper.comment : '' %></textarea>

      <label for="paperStatus">ステータス:</label>
      <select id="paperStatus" name="status" class="status-select status-<%= editPaper ? editPaper.status : '未読' %>">
        <% statusOptions.slice(1).forEach(option => { /* 「全て」を除く */ %>
          <option value="<%= option %>" <%= editPaper && editPaper.status === option ? 'selected' : '' %>>
            <%= option %>
          </option>
        <% }) %>
      </select>
      <br><br>

      <button type="submit"><%= editPaper ? '論文を更新' : '論文追加' %></button>
      <% if (editPaper) { %>
      <button type="button" onclick="location.href='/papers'">キャンセル</button>
      <% } %>
    </form>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const statusSelects = document.querySelectorAll('.status-select[data-paper-id]');

        statusSelects.forEach(selectElement => {
          // ロード時に元のステータスを保持しておく (失敗時のロールバック用)
          selectElement.dataset.originalStatus = selectElement.value;

          selectElement.addEventListener('change', async (event) => {
            const paperId = event.target.dataset.paperId;
            const newStatus = event.target.value;

            try {
              const response = await fetch(`/api/papers/${paperId}/status`, {
                method: 'PATCH',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: newStatus }),
              });

              if (response.ok) {
                console.log('ステータス更新成功！');
                // CSSクラスを更新して色を反映
                event.target.className = `status-select status-${newStatus}`;
                event.target.dataset.originalStatus = newStatus; // 成功したら元のステータスも更新
              } else {
                const errorData = await response.json();
                console.error('ステータス更新失敗:', errorData.message);
                alert('ステータスの更新に失敗しました: ' + errorData.message);
                // 失敗したら元の値に戻す
                event.target.value = event.target.dataset.originalStatus || '';
              }
            } catch (error) {
              console.error('ネットワークエラー:', error);
              alert('ステータスの更新中にネットワークエラーが発生しました。');
              event.target.value = event.target.dataset.originalStatus || '';
            }
          });
        });

        // 編集フォームのステータス選択にも色を反映 (初回ロード時)
        const editStatusSelect = document.getElementById('paperStatus');
        if (editStatusSelect) {
            editStatusSelect.className = `status-select status-${editStatusSelect.value}`;
            editStatusSelect.addEventListener('change', (event) => {
                event.target.className = `status-select status-${event.target.value}`;
            });
        }
      });
    </script>
  </body>
</html>